
---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install Prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]

    - name: Install LEMP Packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'nginx', 'mysql-server', 'python3-pymysql', 'php-fpm', 'php-mysql', 'unzip' ]
      tags: 
        - install
    
# Nginx Configuration
    - name: Sets Nginx conf file
      template:
        src: "files/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ http_conf }}"

    - name: Enables new site
      file:
        src: "/etc/nginx/sites-available/{{ http_conf }}"
        dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
        state: link
      notify: Reload Nginx
    
    - name: Removes "default" site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: Reload Nginx
    

# MySQL Configuration
    - name: Sets the root password 
      mysql_user:  
        name: root  
        host: "localhost"  
        password: "{{ mysql_root_password }}"  
        login_user: root  
        login_password: "{{ mysql_root_password }}"  
        login_unix_socket: /var/run/mysqld/mysqld.sock
        check_implicit_admin: yes  
        priv: "*.*:ALL,GRANT"  

    - name: Removes all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Removes the MySQL test database
      mysql_db: 
        name: test 
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: create a new database  
      mysql_db: name=testdb state=present login_user=root login_password="{{ mysql_root_password }}" 

# UFW Configuration
    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp

# Set up wordpress 
    # - name: copy wordpress zip
    #   ansible.builtin.copy:
    #     src: "files/wordpress-6.1.zip"
    #     dest: "/var/www/html/wordpress.zip"

# extract wordpress file
    - name: Extract wordpress zip
      ansible.builtin.unarchive:
        src: files/wordpress-6.1.zip
        dest: /var/www/html/
      tags: 
        - wordpress

    - name: Recursively change ownership of a directory
      ansible.builtin.file:
        path: /var/www/html/wordpress
        state: directory
        recurse: yes
        owner: www-data
        group: www-data

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
